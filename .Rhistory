knitr::opts_chunk$set(echo = TRUE,cache = TRUE)
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
library("tidyverse")
library(lubridate)
library("patchwork")
library("tufte")
library("extrafont")
#font_import()
#loadfonts(device = "win")
################################################
# Cleaning
# Load data
#df<-read_csv("progress.csv")
# df<-df%>%
#    mutate(updatenr=1)%>%
#    mutate(date=Sys.Date(),progress=as.numeric(progress))%>%
#    mutate(level=factor(level, ordered = TRUE,levels = c("Under Review","Working Paper","Presentation","Results", "Data work","Literature","Textbook","R tutorial","Excel intro","Admin", "Slides", "Tasks",
#                                                         "Coursework")))%>%
#    mutate(project=factor(project, ordered = TRUE,
#           levels = c("Polaris","Crowding","Pareto","Strike","Grading","Antibiotics","CHX","IGM", "Grading Bias","Income Risk",
#                      "School choice","Social housing", "Economic Data","Applied Economics")))
#save("df",file="progress.RData")
################################################
# Define functions
# Update data function
update_data<-function(p,l,us=1,ur=-1){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
temp<-df
# find most recent
update<-max(temp$updatenr)
temp<-temp%>%filter(updatenr==update)
# Update
if (us!=1){
temp<-temp%>%mutate(date=Sys.Date())%>%
mutate(progress=ifelse(project==p&level==l,progress*us,progress))%>%
mutate(updatenr=updatenr+1)
# append
dfnew<-rbind(df,temp)
# save
df<-dfnew
}
else if (ur!=-1) {
temp<-temp%>%mutate(date=Sys.Date())%>%
mutate(progress=ifelse(project==p&level==l,ur,progress))%>%
mutate(updatenr=updatenr+1)
# append
dfnew<-rbind(df,temp)
# save
df<-dfnew
}
write_csv(df,"progress.csv")
save(df,file = "progress.RData")
}
# ResFig
resfig<-function(mdate="2020-07-01",fontsize=19,goalsize=3){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
# select date
dfplot<-df%>%filter(date==as.Date(mdate))%>%filter(category=="research")
# select most recent
dfplot<-dfplot%>%filter(updatenr==max(dfplot$updatenr))
# find sum
dfsum<-dfplot%>%group_by(project)%>%summarise(total=round(100*sum(progress)/600),level="Results")
# Create Fig
fig1<-ggplot(dfplot%>%filter(),aes(x=project,y=progress,fill=level))+
geom_bar(stat="identity")+ coord_flip()+
theme_minimal()+labs(x=" ",y="Progress", fill=" ",title=paste("Research status: ", substr(mdate,6,15),sep=""))+
theme(legend.position = 'bottom')+
scale_fill_brewer(palette="Dark2")+ylim(0,650)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_blank(),plot.background = element_rect(fill="#fffff8",colour = "#fffff8"),
text = element_text(size=goalsize),legend.background = element_rect(fill="#fffff8",colour = "#fffff8"),
panel.border = element_blank())+
theme(text = element_text(size=fontsize, colour = "black"),axis.text.y = element_text(colour="black"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(dfsum,mapping=aes(x=project,y=640,label=paste(total,"%",sep="")),family="Palatino Linotype",size=5)+
theme(text=element_text(family="Palatino Linotype"))+
theme(axis.text.y = element_text(hjust = 0))
fig1
}
# TeachFig
teachfig<-function(mdate,fontsize=19,goalsize=3){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
# select date
dfplot<-df%>%filter(between(date,as.Date(mdate),as.Date(mdate)))%>%filter(category=="teaching")
# select most recent
dfplot<-dfplot%>%filter(updatenr==max(dfplot$updatenr))
# find sum
dfsum<-dfplot%>%group_by(project)%>%summarise(total=round(100*sum(progress)/600),level="Slides")
# Create Fig
fig1<-ggplot(dfplot%>%filter(),aes(x=project,y=progress,fill=level))+
geom_bar(stat="identity")+ coord_flip()+
theme_minimal()+labs(x=" ",y="Progress", fill=" ",title=paste("Teaching status: ", substr(mdate,6,15),sep=""))+
theme(legend.position = 'bottom')+guides(fill=guide_legend(nrow=3))+
scale_fill_brewer(palette="Dark2",drop = TRUE)+ylim(0,430)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_blank(),plot.background = element_rect(fill="#fffff8",colour = "#fffff8"),
text = element_text(size=goalsize),legend.background = element_rect(fill="#fffff8",colour = "#fffff8"),
panel.border = element_blank())+
theme(text = element_text(size=fontsize, colour = "black"),axis.text.y = element_text(colour="black"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(dfsum,mapping=aes(x=project,y=400,label=paste(total,"%",sep="")),family="Palatino Linotype",size=5)+
theme(text=element_text(family="Palatino Linotype"))+
theme(axis.text.y = element_text(hjust = 0))
fig1
}
update_data(p="Economic Data",l="R Tutorial",ur=90)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="CHX",l="Results",ur=95)
update_data(p="CHX",l="Working Paper",ur=90)
resfig(mdate="2020-07-24",fontsize=15,goalsize=2.2)
update_data(p="Strike",l="Under Review",ur=90)
resfig(mdate="2020-07-01",fontsize=15,goalsize=2.2)
rep(1:5,10)
time<-rep(1:10,each = 5))
time<-rep(1:10,each = 5)
df<-data.frame( district<-rep(1:5,10),
time<-rep(1:10,each = 5))
View(df)
df<-data.frame( district=rep(1:5,10),
time=rep(1:10,each = 5))
View(df)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r)
View(df)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
TRUE ~ 0
))
View(df)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0
))
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(region==3,2,1),
y=2+u_t+u_r+te*d)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d)
View(df)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d)
# chart
ggplot(df,aes(x=t,y=y,group=region,shape=region))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d)
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=as.factor(rep(1:5,10)),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d)
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_line()+geom_point()
View(df)
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_step()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.5*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.25*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,group=r,shape=r))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.25*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,2,1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,colour=r,shape=r))+geom_line()+geom_point()
library(tidyverse)
df<-data.frame( r=rep(1:5,10),
t=rep(1:10,each = 5))%>%
mutate(u_t=-.25*t,u_r=0.5*r,d=case_when(
r==1&t>=2  ~1,
r==2&t>=3  ~1,
r==3&t>=4  ~1,
r==4&t>=6  ~1,
r==5&t>=8  ~1,
TRUE ~ 0),
te=ifelse(r==3,-2,-1),
y=2+u_t+u_r+te*d,
r=as.factor(r))
# chart
ggplot(df,aes(x=t,y=y,colour=r,shape=r))+geom_line()+geom_point()
knitr::opts_chunk$set(echo = TRUE,cache = TRUE)
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
library("tidyverse")
library(lubridate)
library("patchwork")
library("tufte")
library("extrafont")
#font_import()
#loadfonts(device = "win")
################################################
# Cleaning
# Load data
#df<-read_csv("progress.csv")
# df<-df%>%
#    mutate(updatenr=1)%>%
#    mutate(date=Sys.Date(),progress=as.numeric(progress))%>%
#    mutate(level=factor(level, ordered = TRUE,levels = c("Under Review","Working Paper","Presentation","Results", "Data work","Literature","Textbook","R tutorial","Excel intro","Admin", "Slides", "Tasks",
#                                                         "Coursework")))%>%
#    mutate(project=factor(project, ordered = TRUE,
#           levels = c("Polaris","Crowding","Pareto","Strike","Grading","Antibiotics","CHX","IGM", "Grading Bias","Income Risk",
#                      "School choice","Social housing", "Economic Data","Applied Economics")))
#save("df",file="progress.RData")
################################################
# Define functions
# Update data function
update_data<-function(p,l,us=1,ur=-1){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
temp<-df
# find most recent
update<-max(temp$updatenr)
temp<-temp%>%filter(updatenr==update)
# Update
if (us!=1){
temp<-temp%>%mutate(date=Sys.Date())%>%
mutate(progress=ifelse(project==p&level==l,progress*us,progress))%>%
mutate(updatenr=updatenr+1)
# append
dfnew<-rbind(df,temp)
# save
df<-dfnew
}
else if (ur!=-1) {
temp<-temp%>%mutate(date=Sys.Date())%>%
mutate(progress=ifelse(project==p&level==l,ur,progress))%>%
mutate(updatenr=updatenr+1)
# append
dfnew<-rbind(df,temp)
# save
df<-dfnew
}
write_csv(df,"progress.csv")
save(df,file = "progress.RData")
}
# ResFig
resfig<-function(mdate="2020-07-01",fontsize=19,goalsize=3){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
# select date
dfplot<-df%>%filter(date==as.Date(mdate))%>%filter(category=="research")
# select most recent
dfplot<-dfplot%>%filter(updatenr==max(dfplot$updatenr))
# find sum
dfsum<-dfplot%>%group_by(project)%>%summarise(total=round(100*sum(progress)/600),level="Results")
# Create Fig
fig1<-ggplot(dfplot%>%filter(),aes(x=project,y=progress,fill=level))+
geom_bar(stat="identity")+ coord_flip()+
theme_minimal()+labs(x=" ",y="Progress", fill=" ",title=paste("Research status: ", substr(mdate,6,15),sep=""))+
theme(legend.position = 'bottom')+
scale_fill_brewer(palette="Dark2")+ylim(0,650)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_blank(),plot.background = element_rect(fill="#fffff8",colour = "#fffff8"),
text = element_text(size=goalsize),legend.background = element_rect(fill="#fffff8",colour = "#fffff8"),
panel.border = element_blank())+
theme(text = element_text(size=fontsize, colour = "black"),axis.text.y = element_text(colour="black"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(dfsum,mapping=aes(x=project,y=640,label=paste(total,"%",sep="")),family="Palatino Linotype",size=5)+
theme(text=element_text(family="Palatino Linotype"))+
theme(axis.text.y = element_text(hjust = 0))
fig1
}
# TeachFig
teachfig<-function(mdate,fontsize=19,goalsize=3){
setwd("C:\\Users\\hs17922\\Dropbox\\Log")
load(file = "progress.RData")
# select date
dfplot<-df%>%filter(between(date,as.Date(mdate),as.Date(mdate)))%>%filter(category=="teaching")
# select most recent
dfplot<-dfplot%>%filter(updatenr==max(dfplot$updatenr))
# find sum
dfsum<-dfplot%>%group_by(project)%>%summarise(total=round(100*sum(progress)/600),level="Slides")
# Create Fig
fig1<-ggplot(dfplot%>%filter(),aes(x=project,y=progress,fill=level))+
geom_bar(stat="identity")+ coord_flip()+
theme_minimal()+labs(x=" ",y="Progress", fill=" ",title=paste("Teaching status: ", substr(mdate,6,15),sep=""))+
theme(legend.position = 'bottom')+guides(fill=guide_legend(nrow=3))+
scale_fill_brewer(palette="Dark2",drop = TRUE)+ylim(0,430)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_blank(),plot.background = element_rect(fill="#fffff8",colour = "#fffff8"),
text = element_text(size=goalsize),legend.background = element_rect(fill="#fffff8",colour = "#fffff8"),
panel.border = element_blank())+
theme(text = element_text(size=fontsize, colour = "black"),axis.text.y = element_text(colour="black"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(dfsum,mapping=aes(x=project,y=400,label=paste(total,"%",sep="")),family="Palatino Linotype",size=5)+
theme(text=element_text(family="Palatino Linotype"))+
theme(axis.text.y = element_text(hjust = 0))
fig1
}
#update_data(p="Polaris",l="Working Paper",us=1.05)
#update_data(p="Economic Data",l="Admin",us=1.05)
#update_data(p="Economic Data",l="R Tutorial",us=1.05)
#update_data(p="CHX",l="Results",ur=95)
#update_data(p="CHX",l="Working Paper",ur=90)
#update_data(p="Grading Bias",l="Results",ur=30)
#update_data(p="Grading Bias",l="Literature",ur=40)
#update_data(p="Grading Bias",l="Data work",us=1.05)
#update_data(p="Grading Bias",l="Data work",us=1.05)
#update_data(p="Economic Data",l="R Tutorial",ur=90)
#update_data(p="Strike",l="Under Review",ur=90)
#update_data(p="Strike",l="Working Paper",ur=100)
#update_data(p="Excel intro",l="R Tutorial",ur=5)
update_data(p="Grading Bias",l="Results",ur=33)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="Grading Bias",l="Data work",us=1.05)
update_data(p="Grading Bias",l="Data work",us=1.05)
shiny::runApp('C:/Github/twowayfedecomp')
install.packages("bacondecomp")
shiny::runApp('C:/Github/twowayfedecomp')
runApp('C:/Github/twowayfedecomp')
runApp('C:/Github/twowayfedecomp')
runApp('C:/Github/twowayfedecomp')
