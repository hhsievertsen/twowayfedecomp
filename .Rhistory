m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
#########
df_me<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
a<-df_me%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1,y=y-1)%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=m),size=1.5)
##################################### Simulate data  ##############################################
T2<-15
T3<-10
G2=30
G3=20
df<-simulate_data(
seed=1909,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=1,                              # Treatment effect group 2
m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
#########
df_me<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
a<-df_me%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1,y=y-1)%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(aes(x=time_to_treatment,y=ymean_prepost),size=1.5)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),aes(x=time_to_treatment,y=ymean_prepost),size=1.5)+
geom_line(a%>%filter(post==1),aes(x=time_to_treatment,y=ymean_prepost),size=1.5)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=1.5)+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=1.5)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type=dash)+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type=dash)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type="dashed")
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type="dash")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,type="dash")
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1.5)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost,label(ymean_prepost)))
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost,label=ymean_prepost)))
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost,label=ymean_prepost))
View(a)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%filter(row_number()==max(which(a > 0))),mapping=aes(x=time_to_treatment,y=ymean_prepost,label=ymean_prepost))
a%>%filter(row_number()==max(which(a > 0)))
max(which(a > 0))
nrow(a)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%filter(row_number()==nrow(a)),mapping=aes(x=time_to_treatment,y=ymean_prepost,label=ymean_prepost))
a%>%filter(row_number()==nrow(a)
)
nrow(a)
a%>%filter(row_number()==1)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a)),mapping=aes(x=time_to_treatment,y=ymean_prepost,label=ymean_prepost))
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=round(ymean_prepost,3)),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label))
?geom_text
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=round(ymean_prepost,3)),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=0.5)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=round(ymean_prepost,3)),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=0.1)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post- pre mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=0.1)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post- pre mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-0.1)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post- pre mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-2)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post- pre mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)
lm(y=as.factor(time_to_treatment),data=a)
lm(y=as.factor(time_to_treatment),data=a)
lm(y~as.factor(time_to_treatment),data=a)
?lm
lm(y~relevel(time_to_treatment, ref = -1),data=a)
lm(y~relevel(time_to_treatment, ref = "-1"),data=a)
lm(y~relevel(as.factor(time_to_treatment), ref = "-1"),data=a)
sa<-lm(y~relevel(as.factor(time_to_treatment), ref = "-1"),data=a)
View(sa)
eventstudy<-lm(y~relevel(as.factor(time_to_treatment), ref = "-1"),data=a)
ecoef<-eventstudy$coefficients
View(sa)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)
ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
library("patchwork")
c1 + c2
ggarrange(c1,c2)
library("ggarrange")
library("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
shiny::runApp('C:/Github/bacondecomp/Rfiles')
shiny::runApp('C:/Github/bacondecomp/Rfiles')
rm(list=ls())
runApp('C:/Github/bacondecomp/Rfiles')
library("shinyWidgets")
install.packages("shinyWidgets")
runApp('C:/Github/bacondecomp/Rfiles/runapp.R')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
##################################### Simulate data  ##############################################
T2<-15
T3<-10
G2=30
G3=20
df<-simulate_data(
seed=1909,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=1,                              # Treatment effect group 2
m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
library("shiny")
library("lfe")
source("simulate_data.R")
library("bacondecomp")
library("tidyverse")
library("patchwork")
library("kableExtra")
##################################### Simulate data  ##############################################
T2<-15
T3<-10
G2=30
G3=20
df<-simulate_data(
seed=1909,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=1,                              # Treatment effect group 2
m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
df
View(df)
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2),y-y[T2],ifelse(G==3),y=y-y[T3],NA)
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3),y=y-y[T3],NA)
)
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA))
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA))
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA))
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA))
)
a<-df%>%group_by(G)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA)))
View(a)
a<-df%>%group_by(id)%>%mutate(a=ifelse(G==2,y-y[T2],ifelse(G==3,y=y-y[T3],NA)))
View(a)
a<-df%>%group_by(id)%>%mutate(a=ifelse(G==2,y-y[T2-1],ifelse(G==3,y=y-y[T3-1],NA)))
View(a)
runApp('C:/Github/bacondecomp/Rfiles')
simulate_data<-function(seed,T2,T3,m2,m3,mt2,mt3,G2,G3){
# set values
set.seed(seed)                        # set seed
mt2=(1+mt2)                           # Treatment effect growth group 2
mt3=(1+mt3)                           # Treatment effect growth group 3
m2=1+m2                               # Treatment effect group 2
m3=1+m3                               # Treatment effect group 3
T<-30                                 # Time periods
G<-3                                  # Groups
G1<-30                                # Group size group 1 (never treated)
N<-G1+G2+G3
# Create tibble
df<-tibble(id=rep(1:(N),T),                                     # Id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N)))%>%                              # Time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=G1,1,ifelse(id>G1&id<=(G1+G2),2,3)),    # Treated: D==1
D=ifelse(G==2&t>=T2,1,ifelse(G==3&t>=T3,1,0)),         # Post treatment indicator
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),                 # Treatment effect group 2
ifelse(D==1&G==3,m3*mt3^(t-T3),                 # Treatment effect group 3
1)),                                # mean Y for untreated
y=rnorm(n=N*T,mean=mean,sd=.1))%>%                  # Simulate Outcome y
group_by(G,D)%>%                                              # Group by "group times post" treatment
mutate(ybar=mean(y))                                          # Group means for chart
return(df)
}
runApp('C:/Github/bacondecomp/Rfiles')
library(shiny); runApp('C:/Github/bacondecomp/Rfiles/runapp.R')
setwd("C:\\Github\\twowayfedecomp\\Rfiles")
source("ui.R")
source("server.R")
shinyApp(ui,server)
# Define UI for bacondecomp
mycss <- "
.irs-bar,
.irs-bar-edge,
.irs-single,
.irs-grid-pol {
background: black;
border-color: black;
},
body{font-size:11px;background-color:#FFFFFF
}
#RegSum1{font-size:11px}
#RegSum2{font-size:9px}
label{font-weight:normal}
"
ui <- fluidPage(
tags$head(
tags$style(mycss)
),
# Sidebar for settings
column(3,
# Settings
strong("Settings"),br(),
# Inputs
numericInput(inputId= "seed",label="Set seed", 1909, min = 0, max = NA),
strong("Treatment effects"),
sliderInput(inputId = "group2treatmenteffect",label = "Group 2 (baseline):",min = 0,max = 3,value = 1.4,step=0.05, ticks = FALSE),
sliderInput(inputId = "group3treatmenteffect",label = "Group 3 (baseline):",min = 0,max = 3,value = 1.6,step=0.05, ticks = FALSE),br(),
strong("Time-varying treatment effects"),
sliderInput(inputId = "group2timeeffect",label = "Group 2 growth rate:",min = -0.03,max = 0.03,value = 0.02,step=0.005, ticks = FALSE),
sliderInput(inputId = "group3timeeffect",label = "Group 3 growth rate:",min = -0.03,max = 0.03,value = 0,step=0.005, ticks = FALSE),br(),
strong("Treatment timing"),
sliderInput(inputId = "group2treatment",label = "Group 2:",min = 2,max = 99,value = 30, ticks = FALSE),
sliderInput(inputId = "group3treatment",label = "Group 3:",min = 2,max = 99,value = 80, ticks = FALSE),br(),
strong("Group size"),
sliderInput(inputId = "group2size",label = "Group 2:",min = 2,max = 50,value = 25, ticks = FALSE),
sliderInput(inputId = "group3size",label = "Group 3:",min = 2,max = 50,value = 25, ticks = FALSE),
),
# Main panel with results
column(6,
h3("Illustration of two-way fixed effects estimators decomposition"),br(),
"The simulation is based on Goodman-Bacon (2019): 'DD  with Variation in Treatment Timing' and adopts a staggered adoption design'.", br(),
"For the general case see de Chaisemartin & D’Haultfoeuille (2019): 'Two-way fixed effects estimators with heterogeneous treatment effects'",br(),br(),
"by Hans H. Sievertsen", tags$a(href="https://github.com/hhsievertsen/", "(github)"), tags$a(href="mailto:h.h.sievertsen@bristol.ac.uk", "h.h.sievertsen@bristol.ac.uk"),br(),br(),br(),
# chart
plotOutput(outputId = "distPlot"),
tableOutput(outputId = "RegSum1"),br(),
"Notes: The DGP  for the overall ATT (first row) refers to the population weighted ATT across the two groups. The estimate for the overall ATT (first row) is the 2-way fixed effects estimate.",
),
# Side bar with info
fluidRow(column(3,
# Explanation
strong("! Change settings in the panel on the left !"),br(),
br(),
strong("Setup"),br(),
"- 3 groups. Group 1 has a fixed size of 30.",br(),
"- Group 1 is never treated.",br(),
"- Groups 2 & 3 get treated at some point (see left panel).",br(),
"- Treatment effects can vary across groups and over time (see left panel).",br(),
"- The two-way fixed effects DD  is estimated with felm() from the lfe package, by estimating equation (2) from Goodman-Bacon (2019):",br(),
br("Sources"),
"* ",  tags$a(href="https://cdn.vanderbilt.edu/vu-my/wp-content/uploads/sites/2318/2019/07/29170757/ddtiming_7_29_2019.pdf", "Goodman-Bacon (2019) Working Paper"),br(),
"* ",  tags$a(href="https://sites.google.com/site/clementdechaisemartin/two_way_FE.pdf?attredirects=0&d=1", "de Chaisemartin & D’Haultfoeuille (2019): 'Two-way fixed effects estimators with heterogeneous treatment effects'"),
br(),
"* ",tags$a(href="https://cran.r-project.org/web/packages/bacondecomp/readme/README.html", "bacondecomp for R"),
br(),br(),
strong("Updates:"),br(),
"- May 12, 2020: first version by Hans H. Sievertsen",br(),
"- May 13, 2020: incorporated changes by Matthieu Stigler (https://matthieustigler.github.io/)",br(),
"- May 14, 2020: corrected my mistake in calculating ATT and updated table.",br(),
"- May 17, 2020: added event study chart and DGP values to table.",br(),
"- May 22, 2020: minor adjustments.",br(),br(),
"Corrections and suggestions are very welcome (by e-mail:", tags$a(href="mailto:h.h.sievertsen@bristol.ac.uk", "h.h.sievertsen@bristol.ac.uk"), "or on github:",
tags$a(href="https://github.com/hhsievertsen/twowayfedecomp","github.com/hhsievertsen/twowayfedecomp"),br(),br(),br()
,
strong("Regression output:"),
verbatimTextOutput(outputId = "RegSum2"),
)
))
library("shiny")
library("lfe")
source("simulate_data.R")
library("bacondecomp")
library("tidyverse")
library("patchwork")
library("kableExtra")
server <- function(input, output) {
output$distPlot <- renderPlot({
##################################### Simulate data  ##############################################
T2<-input$group2treatment
T3<-input$group3treatment
G2=input$group2size
G3=input$group3size
df<-simulate_data(
seed=input$seed,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=input$group2treatmenteffect,                              # Treatment effect group 2
m3=input$group3treatmenteffect,                              # Treatment effect group 3
mt2=input$group2timeeffect,                                  # Treatment effect growth rate  group 2
mt3=input$group3timeeffect,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
##################################### Estimate 2way FE  ######################################################
beta_twowayDD<-felm(y ~ D | G+ t, df) # estimate two way DD
output$RegSum2 <- renderPrint(summary(beta_twowayDD))              # Post output from regression
##################################### DGP  ##################################################################
# By group
df_dgp<-df%>%group_by(G)%>%filter(D==1)%>%summarise(ATT_DGP=round(mean(mean)-1,3))%>%
mutate(type=ifelse(G==2,"Group 2 ATT", "Group 3 ATT"),population_weight=ifelse(G==2,round(G2/(G2+G3),3),round(G3/(G2+G3),3)),
order=ifelse(G==2,2,5))%>%
ungroup()%>%select(-G)%>%select(type,ATT_DGP,population_weight,order)
# Overall
df_dgp<-rbind(df_dgp,
df_dgp%>%mutate(wDgp=ATT_DGP*population_weight)%>%summarise(ATT_DGP=round(sum(wDgp),3))%>%mutate(type="ATT",population_weight="",order=1))
##################################### Goodman-Bacon Decomposition ####################################### ####
if (T2!=T3){
# Decompose
df_bacon <- bacon(y ~ D,data = df,id_var = "id",time_var = "t")    # Bacon decomp
# Adjust table to have same format
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2,2,5))%>%
mutate(weight=round(weight,3))%>%select(type,estimate,weight,order)
# Append overall estimated ATT (two way FE)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
##################################### Create overall table #########################################
#Append DGP and ATTs
merged<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3))
#Append Goodman Decomp
df_disp<-rbind(df_bacon_clean,merged)
# Final stuff
df_disp<-df_disp%>%arrange(order)%>%select(type,ATT_DGP,population_weight,-order,estimate,weight)%>%
mutate(weight=ifelse(row_number()==1,"",weight))
# Format table
a<-df_disp%>%
knitr::kable("html",align = c("l","c","c","c","c","c"),col.names = c(" ","DGP",
"Population weight","Estimate",
"Two-way FE Weight")) %>%
kable_styling("striped", full_width = F)
}
else{
# No variation in timing just report 2way FE
df_bacon_att<-tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1)
#Append DGP
df_bacon_att<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3),weight=round(estimate,3))
df_disp<-rbind(df_bacon_att)
df_disp<-df_disp%>%arrange(order)%>%select(type,ATT_DGP,-order,estimate,-population_weight,-weight)%>%filter(row_number()==1)
a<-df_disp%>%
knitr::kable("html",align = c("l","c","c","c","c","c"),col.names = c(" ","DGP",
"Estimate")) %>%
kable_styling("striped", full_width = F)
}
output$RegSum1 <- renderPrint(                                   # Post Bacon decomposition
a )
##################################### Event study
# event study
df_es<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
df_es<-df_es%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1)%>%
group_by(id)%>%mutate(y=ifelse(G==2,y-y[T2-1],ifelse(G==3,y=y-y[T3-1],NA)))%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_point(aes(x=time_to_treatment,y=ymean),size=4,colour="black",shape=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(df_es))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=median(df_es$time_to_treatment,na.rm=TRUE),y=ymean_prepost,label=label),nudge_y=+0.25)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position="none")+labs(y=expression(y[t]-y["t=-1"]))+labs(title="(b) Event study chart")+ scale_color_brewer(palette="Dark2")
##################################### Chart showing DDs  ##############################################
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"),
plot.title = element_text(hjust = 0.5))+
labs(colour="Group",title="(a) Outcome value (y) over time (t)  ")+ scale_color_brewer(palette="Dark2")
c1+c2
})
}
setwd("C:\\Github\\twowayfedecomp\\Rfiles")
source("ui.R")
source("server.R")
shinyApp(ui,server)
runApp('C:/Github/twowayfedecomp')
